DESIGN(TRI_NAND2) + REFERENCE(AMI06N,AMI06P);
PORT(A) + DIRECTION(INPUT) + NET_NUMBER(0);
PORT(B) + DIRECTION(INPUT) + NET_NUMBER(1);
PORT(E) + DIRECTION(INPUT) + ENABLE(H) + COMPLEMENT(NE) + NET_NUMBER(2);
PORT(F) + DIRECTION(OUTPUT) + LOGIC((~(A&B)@E)) + RISE(-NAN,-NAN) + FALL(-NAN,-NAN) + TRISTATE(E,NE) + NET_NUMBER(3);
PORT(NE) + DIRECTION(INPUT) + ENABLE(L) + COMPLEMENT(E) + PGATE(F) + NET_NUMBER(4);
PORT(INH_INH_BN) + FEEDTHRU + NET_NUMBER(5);
PORT(VDD) + DIRECTION(INPUT) + SUPPLY1 + BULK + NET_NUMBER(6);
PORT(GND) + DIRECTION(INPUT) + SUPPLY0 + NET_NUMBER(7);
COMPLEMENTARY(E/NE);
ARC(A:F) + NEGATIVE_UNATE + ONE_STAGE
 + TRAN(10:01)
 + TRAN(01:10)
 + USE(D0000,D0002);
ARC(B:F) + NEGATIVE_UNATE + ONE_STAGE
 + TRAN(10:01)
 + TRAN(01:10)
 + USE(D0004,D0006);
ARC(E/NE:F) + NON_UNATE + TRISTATE_H(E,NE) + ONE_STAGE
 + TRAN(10:0Z)
 + TRAN(10:1Z)
 + TRAN(01:Z0)
 + TRAN(01:Z1)
 + USE(D0008,D0009,D0010,D0011,D0012,D0013,D0014,D0015);
VECTOR(R11D0010) + ID(D0000) + MID(MD0000) + DELAY(A) + TARGET(F);
VECTOR(R00Z1010) + ID(D0001) + MID(MP0001) + POWER(A);
VECTOR(F11U0010) + ID(D0002) + MID(MD0000) + DELAY(A) + TARGET(F);
VECTOR(F00Z1010) + ID(D0003) + MID(MP0001) + POWER(A);
VECTOR(1R1D0010) + ID(D0004) + MID(MD0004) + DELAY(B) + TARGET(F);
VECTOR(0R0Z1010) + ID(D0005) + MID(MP0005) + POWER(B);
VECTOR(1F1U0010) + ID(D0006) + MID(MD0004) + DELAY(B) + TARGET(F);
VECTOR(0F0Z1010) + ID(D0007) + MID(MP0005) + POWER(B);
VECTOR(00RMF010) + ID(D0008) + MID(D0008) + DELAY(E/NE) + TARGET(F);
VECTOR(01RMF010) + ID(D0009) + MID(D0009) + DELAY(E/NE) + TARGET(F);
VECTOR(10RMF010) + ID(D0010) + MID(D0010) + DELAY(E/NE) + TARGET(F);
VECTOR(11RWF010) + ID(D0011) + MID(D0011) + DELAY(E/NE) + TARGET(F);
VECTOR(00FVR010) + ID(D0012) + MID(D0012) + DELAY(E/NE) + TARGET(NE);
VECTOR(01FVR010) + ID(D0013) + MID(D0013) + DELAY(E/NE) + TARGET(NE);
VECTOR(10FVR010) + ID(D0014) + MID(D0014) + DELAY(E/NE) + TARGET(NE);
VECTOR(11FAR010) + ID(D0015) + MID(D0015) + DELAY(E/NE) + TARGET(E);
END_OF_DESIGN;

