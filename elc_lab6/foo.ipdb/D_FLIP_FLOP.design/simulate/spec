DESIGN(D_FLIP_FLOP) + REFERENCE(AMI06N,AMI06P);
PORT(CLK) + DIRECTION(INPUT) + CLOCK(H) + NET_NUMBER(0);
PORT(CLR) + DIRECTION(INPUT) + DATA + NET_NUMBER(1);
PORT(DATA) + DIRECTION(INPUT) + DATA + NET_NUMBER(2);
PORT(NQ) + DIRECTION(OUTPUT) + LOGIC(~(CLK?(CLR&P0001):P0000)) + RISE(-NAN,-NAN) + FALL(-NAN,-NAN) + NAKED + NET_NUMBER(3);
PORT(Q) + DIRECTION(OUTPUT) + LOGIC(P0000) + EFFECTED(NQ) + NET_NUMBER(4);
PORT(VDD) + DIRECTION(INPUT) + SUPPLY1 + BULK + NET_NUMBER(5);
PORT(GND) + DIRECTION(INPUT) + SUPPLY0 + BULK + NET_NUMBER(6);
NODE(P0000) + DIRECTION(OUTPUT) + SOURCE(VDD) + NET_NUMBER(7) + NAME_MAP(11);
NODE(P0001) + DIRECTION(OUTPUT) + SOURCE(VDD) + NET_NUMBER(10) + NAME_MAP(10);
NODE(P0002) + DIRECTION(OUTPUT) + SOURCE(VDD) + NET_NUMBER(11) + NAME_MAP(8);
REGISTER(P0000,NQ) + LOGIC(~NQ,~(CLK?(CLR&P0001):P0000));
REGISTER(P0001,P0002) + LOGIC(~P0002,~(CLK?P0001:(CLR&DATA)));
ARC(CLK:NQ) + NON_UNATE + RISE_EDGE + ONE_STAGE
 + TRAN(01:01)
 + TRAN(01:10)
 + USE(D0000,D0002);
ARC(CLK:Q) + NON_UNATE + RISE_EDGE + ONE_STAGE
 + TRAN(01:01)
 + TRAN(01:10)
 + USE(D0001,D0003);
ARC(CLR:NQ) + NEGATIVE_UNATE + ONE_STAGE
 + TRAN(10:01)
 + TRAN(01:10)
 + USE(D0008,D0011);
ARC(CLR:Q) + POSITIVE_UNATE + TWO_STAGE
 + TRAN(01:01)
 + TRAN(10:10)
 + USE(D0009,D0012);
CHECK(DATA) + RELATED(CLK:01) + SETUP + HOLD + WHEN(CLR)
 + USE(R0000,R0001,R0002,R0003);
CHECK(CLR) + RELATED(CLK) + SETUP + HOLD
 + USE(R0004,R0005,R0006,R0007,R0008,R0009,R0010,R0011,R0012,R0013,R0014,R0015);
CHECK(CLK) + WIDTH_H
 + USE(D0000,D0001,D0002,D0003);
VECTOR(R00U-10DLH) + ID(D0000) + MID(MD0000) + DELAY(CLK) + TARGET(NQ);
VECTOR(R00-D10DLH) + ID(D0001) + MID(MD0001) + DELAY(CLK) + TARGET(Q);
VECTOR(R11D-10UHL) + ID(D0002) + MID(MD0000) + DELAY(CLK) + TARGET(NQ);
VECTOR(R11-U10UHL) + ID(D0003) + MID(MD0001) + DELAY(CLK) + TARGET(Q);
VECTOR(R00HL10LLH) + ID(D0004) + MID(MP0004) + POWER(CLK);
VECTOR(F00HL10LDU) + ID(D0005) + MID(MP0004) + POWER(CLK);
VECTOR(F11HL10LUD) + ID(D0006) + MID(MP0004) + POWER(CLK);
VECTOR(F00HL10LLH) + ID(D0007) + MID(MP0004) + POWER(CLK);
VECTOR(1R0D-10UHL) + ID(D0008) + MID(MD0008) + DELAY(CLR) + TARGET(NQ);
VECTOR(1R0-U10UHL) + ID(D0009) + MID(MD0009) + DELAY(CLR) + TARGET(Q);
VECTOR(0R0HL10LLH) + ID(D0010) + MID(MP0010) + POWER(CLR);
VECTOR(1F0U-10DHL) + ID(D0011) + MID(MD0008) + DELAY(CLR) + TARGET(NQ);
VECTOR(1F0-D10DHL) + ID(D0012) + MID(MD0009) + DELAY(CLR) + TARGET(Q);
VECTOR(0F0HL10LLH) + ID(D0013) + MID(MP0010) + POWER(CLR);
VECTOR(01RHL10LUD) + ID(D0014) + MID(MP0014) + POWER(DATA);
VECTOR(00RHL10LLH) + ID(D0015) + MID(MP0014) + POWER(DATA);
VECTOR(01FHL10LDU) + ID(D0016) + MID(MP0014) + POWER(DATA);
VECTOR(00FHL10LLH) + ID(D0017) + MID(MP0014) + POWER(DATA);
VECTOR(101HL10LLH) + ID(D0018) + MID(ML0000) + POWER();
VECTOR(R1Jud10dlh) + ID(R0000) + MID(R0000) + RACE(CLK,DATA) + HOLD + TARGET(NQ,Q);
VECTOR(R1Jdu10uud) + ID(R0001) + MID(R0001) + RACE(DATA,CLK) + SETUP + TARGET(NQ,Q);
VECTOR(R1Kud10ddu) + ID(R0002) + MID(R0002) + RACE(DATA,CLK) + SETUP + TARGET(NQ,Q);
VECTOR(R1Kdu10uhl) + ID(R0003) + MID(R0003) + RACE(CLK,DATA) + HOLD + TARGET(NQ,Q);
VECTOR(RJ1ud10dlh) + ID(R0004) + MID(R0004) + RACE(CLK,CLR) + HOLD + TARGET(NQ,Q);
VECTOR(RJ1du10uud) + ID(R0005) + MID(R0005) + RACE(CLR,CLK) + SETUP + TARGET(NQ,Q);
VECTOR(RK1UD10Dhl) + ID(R0006) + MID(R0006) + RACE(CLK,CLR) + HOLD + TARGET(P0001,P0002);
VECTOR(RK1UD10Ddu) + ID(R0007) + MID(R0007) + RACE(CLR,CLK) + SETUP + TARGET(P0001,P0002);
VECTOR(RK1HL10Ldu) + ID(R0008) + MID(R0008) + RACE(CLR,CLK) + SETUP + TARGET(P0001,P0002);
VECTOR(RK1--10Lhl) + ID(R0009) + MID(R0009) + RACE(CLK,CLR) + HOLD + TARGET(P0001,P0002);
VECTOR(FJ0hl10lDU) + ID(R0010) + MID(R0010) + RACE(CLK,CLR) + HOLD + TARGET(NQ,Q);
VECTOR(FJ0du10uDU) + ID(R0011) + MID(R0011) + RACE(CLR,CLK) + SETUP + TARGET(NQ,Q);
VECTOR(FJ1hl10lHL) + ID(R0012) + MID(R0012) + RACE(CLK,CLR) + HOLD + TARGET(NQ,Q);
VECTOR(FJ1du10uHL) + ID(R0013) + MID(R0013) + RACE(CLR,CLK) + SETUP + TARGET(NQ,Q);
VECTOR(FK0lh10hDU) + ID(R0014) + MID(R0014) + RACE(CLK,CLR) + HOLD + TARGET(NQ,Q);
VECTOR(FK0ud10dDU) + ID(R0015) + MID(R0015) + RACE(CLR,CLK) + SETUP + TARGET(NQ,Q);
END_OF_DESIGN;

